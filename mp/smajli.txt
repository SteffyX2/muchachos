#include <LiquidCrystal.h>

LiquidCrystal lcd(8, 9, 4, 5, 6, 7);

byte smajli[8] = {
  B00000 ,
  B00000 ,
  B11011 ,
  B00000 ,
  B10001 ,
  B01110 ,
  B00000 ,
};

int x, y;

unsigned char taster_staro, taster_novo;

void setup() {
  lcd.begin(16, 2);
  
  lcd.createChar(0, smajli);
  
  x = 0;
  y = 0;
  lcd.setCursor(x, y);
  lcd.write(byte(0));

  taster_staro = 0;
  taster_novo = 0;
}

void loop() {
  taster_novo = ocitaj_taster();
  if(taster_novo != taster_staro)
  {
    switch(taster_novo)
    {
      case 1: // SELECT
      
      break;
      case 2: // LEFT
		if(x > 0)
          x--;
      	lcd.clear();
      	lcd.setCursor(x, y);
  		lcd.write(byte(0));
      break;
      case 3: // UP
      	if(y > 0)
          y--;
      	lcd.clear();
      	lcd.setCursor(x, y);
  		lcd.write(byte(0));
      break;
      case 4: // DOWN
      	if(y < 1)
          y++;
      	lcd.clear();
      	lcd.setCursor(x, y);
  		lcd.write(byte(0));
      break;
      case 5: // RIGHT
      	if(x < 15)
          x++;
      	lcd.clear();
      	lcd.setCursor(x, y);
  		lcd.write(byte(0));
      break;
      default:
      break;
    }

    taster_staro = taster_novo;
  }    
}

byte ocitaj_taster()
{
  int tmp = analogRead(0); //stanje tastera se ocitava preko
  //analognog ulaza 0
  if (tmp > 635 && tmp < 645) //SELECT
    return 1;
  if (tmp > 405 && tmp < 415) //LEFT
    return 2;
  if (tmp > 95 && tmp < 105) //UP
    return 3;
  if (tmp > 252 && tmp < 262) //DOWN
    return 4;
  if (tmp < 5) //RIGHT
    return 5;
  return 0; //nije pritisnut nijedan od tastera
}
